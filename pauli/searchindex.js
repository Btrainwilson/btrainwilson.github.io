Search.setIndex({"docnames": ["cli", "generated/pauli", "index", "modules", "pauli"], "filenames": ["cli.rst", "generated/pauli.rst", "index.rst", "modules.rst", "pauli.rst"], "titles": ["&lt;no title&gt;", "pauli", "Welcome to <code class=\"docutils literal notranslate\"><span class=\"pre\">pauli</span></code>\u2019s documentation!", "pauli", "Modules"], "terms": {"function": [1, 2], "i": [2, 3, 4], "python": 2, "packag": 2, "simplifi": [2, 3, 4], "manipul": 2, "For": 2, "an": [2, 4], "introduct": 2, "see": 2, "nielsen": 2, "chuang": 2, "modul": [2, 3], "paulialgebra": [2, 3], "decompos": [2, 3], "gener": [2, 3], "To": 2, "us": [2, 4], "first": 2, "pip": 2, "from": [2, 4], "m": 2, "venv": 2, "sourc": 2, "bin": 2, "activ": 2, "git": 2, "http": 2, "github": 2, "com": 2, "btrainwilson": 2, "Or": 2, "unzip": 2, "zip": 2, "cd": 2, "e": 2, "Then": 2, "you": 2, "can": [2, 4], "either": 2, "through": 2, "invok": 2, "cli": 2, "_____": 2, "_": 2, "__": 2, "___": 2, "____": 2, "calcul": 2, "type": [2, 4], "help": 2, "list": [2, 4], "2": [2, 4], "xy": 2, "4": 2, "6xy": 2, "pipe": 2, "support": [2, 4], "echo": 2, "y": [2, 3, 4], "out": 2, "log": 2, "cat": 2, "2xy": 2, "4y": 2, "which": [2, 4], "import": [2, 4], "your": 2, "script": 2, "all": 2, "follow": 2, "assum": 2, "have": 2, "The": [2, 4], "sigma_x": 2, "begin": 2, "pmatrix": 2, "0": [2, 4], "1": [2, 4], "end": 2, "sigma_i": 2, "sigma_z": 2, "exhibit": 2, "ar": 2, "analysi": 2, "implement": 2, "quantum": 2, "algorithm": 2, "error": 2, "correct": 2, "techniqu": 2, "closur": 2, "product": 2, "ani": 2, "two": [2, 4], "also": 2, "sigma_j": 2, "associ": 2, "four": 2, "sigma_k": 2, "ident": 2, "map": 2, "each": [2, 4], "itself": 2, "invers": 2, "its": 2, "own": 2, "pauliel": [2, 3, 4], "class": [2, 4], "serv": 2, "backbon": 2, "pass": 2, "valid": [2, 4], "paulisymbol": [2, 3, 4], "enum": 2, "constructor": 2, "x": [2, 3, 4], "z": [2, 3, 4], "print": [2, 4], "str": [2, 4], "method": 2, "pauli_to_str": [2, 3, 4], "assert": 2, "likewis": 2, "multipli": [2, 4], "oper": 2, "multiply_pauli": [2, 3, 4], "given": 2, "delta_": 2, "ij": [2, 4], "epsilon_": 2, "ijk": 2, "where": 2, "levi": 2, "civita": 2, "symbol": [2, 4], "comput": 2, "permut": 2, "sign": 2, "j": 2, "k": 2, "iz": 2, "ix": 2, "we": 2, "introduc": 2, "factor": 2, "phi": [2, 4], "complex": [2, 4], "number": 2, "multiply_phas": [2, 3, 4], "1j": [2, 4], "specifi": 2, "paramet": [2, 4], "includ": 2, "mean": 2, "preserv": 2, "under": 2, "phi_i": 2, "phi_j": 2, "5": 2, "20iz": 2, "while": 2, "standard": 2, "onli": 2, "vector": 2, "space": 2, "n": [2, 4], "tensor": 2, "basi": 2, "A": [2, 4], "over": 2, "let": 2, "sigma_": 2, "i_0": 2, "i_n": 2, "set": 2, "span": 2, "i_j": 2, "compos": [2, 4], "charact": 2, "otherwis": [2, 4], "valu": [2, 4], "except": 2, "rais": 2, "e0": 2, "yi": 2, "e1": 2, "xi": 2, "express": [2, 4], "pauli_algebra_to_str": [2, 3, 4], "thi": 2, "becom": 2, "more": 2, "interest": 2, "multiply_pauli_algebra_by_scalar": [2, 3, 4], "e2": 2, "10": 2, "3": [2, 4], "3yi": 2, "iyi": 2, "rule": 2, "multiply_pauli_algebra": [2, 3, 4], "e3": 2, "izi": 2, "add": [2, 4], "term": [2, 4], "add_pauli_algebra": [2, 3, 4], "e4": 2, "2izi": 2, "zi": 2, "redund": 2, "our": 2, "becaus": 2, "call": 2, "automat": [2, 4], "__add__": [2, 3, 4], "__mul__": [2, 3, 4], "howev": 2, "lastli": 2, "come": 2, "simpl": 2, "librari": 2, "backend": [2, 4], "evalu": 2, "test": 2, "11i": 2, "must": 2, "explicit": 2, "8": 2, "8izi": 2, "notat": 2, "6j": 2, "6i": 2, "5x": 2, "5y": 2, "40izi": 2, "argument": 2, "start": [2, 4], "custom": [2, 4], "exit": 2, "As": 2, "final": 2, "generatehermitian": [2, 3, 4], "matrix": [2, 4], "real": [2, 4], "imaginari": [2, 4], "part": 2, "bound": [2, 4], "b": [2, 4], "rang": 2, "np": [2, 4], "linspac": 2, "001": 2, "array_equ": 2, "conj": 2, "t": 2, "ab": 2, "imag": 2, "form": 2, "so": 2, "paulidecomp": 2, "rebuild": 2, "origin": 2, "generatefrompaulidecomp": [2, 3, 4], "2a": 2, "100": 2, "r": [2, 4], "rand": 2, "r2": 2, "decomptopauli": [2, 3, 4], "allclos": 2, "2b": 2, "2c": 2, "dropout": 2, "randint": 2, "interpret": 3, "group": 3, "element": 3, "paulialgebrael": [3, 4], "eq_group": [3, 4], "phase_to_str": [3, 4], "simplify_v": [3, 4], "text": 4, "string": 4, "lexer": 4, "parser": 4, "built": 4, "exampl": 4, "xix": 4, "ixi": 4, "2xix": 4, "2ixi": 4, "return": 4, "reduc": 4, "sequenc": 4, "algebra": 4, "singl": 4, "sum": 4, "initi": 4, "initil": 4, "union": 4, "p": 4, "other": 4, "int": 4, "float": 4, "togeth": 4, "result": 4, "scalar": 4, "multipl": 4, "ad": 4, "si": 4, "self": 4, "qubit": 4, "If": 4, "via": 4, "elementwis": 4, "2xxx": 4, "2iii": 4, "combin": 4, "same": 4, "phase": 4, "new": 4, "pr1": 4, "pr2": 4, "pr": 4, "convert": 4, "composit": 4, "matric": 4, "r_0i": 4, "r_1x": 4, "r_2y": 4, "r_3z": 4, "mathbf": 4, "x_": 4, "r_0": 4, "r_1": 4, "r_2": 4, "r_3": 4, "coeffici": 4, "decomposit": 4, "ndarrai": 4, "numer": 4, "random": 4, "hermitian": 4, "re": 4, "im": 4, "dimens": 4, "compon": 4, "ndarri": 4, "none": 4, "repres": 4, "addit": 4, "pauli1": 4, "xyz": 4, "pauli2": 4, "pauli3": 4, "iii": 4, "option": 4, "name": 4, "qualnam": 4, "boundari": 4, "wrapper": 4, "around": 4, "val": 4, "represent": 4}, "objects": {"": [[1, 0, 0, "-", "pauli"]], "pauli": [[4, 0, 0, "-", "decompose"], [4, 0, 0, "-", "generator"], [4, 0, 0, "-", "interpreter"], [4, 0, 0, "-", "pauli"], [4, 0, 0, "-", "paulialgebra"]], "pauli.decompose": [[4, 1, 1, "", "decompToPauli"]], "pauli.generator": [[4, 1, 1, "", "generateFromPauliDecomp"], [4, 1, 1, "", "generateHermitian"]], "pauli.interpreter": [[4, 1, 1, "", "interpret"]], "pauli.pauli": [[4, 2, 1, "", "PauliAlgebraElement"], [4, 2, 1, "", "PauliElement"], [4, 2, 1, "", "PauliSymbol"], [4, 1, 1, "", "multiply_pauli"], [4, 1, 1, "", "multiply_phase"], [4, 1, 1, "", "pauli_to_string"], [4, 1, 1, "", "phase_to_string"], [4, 1, 1, "", "simplify_val"]], "pauli.pauli.PauliAlgebraElement": [[4, 3, 1, "", "eq_group"]], "pauli.pauli.PauliSymbol": [[4, 4, 1, "", "I"], [4, 4, 1, "", "X"], [4, 4, 1, "", "Y"], [4, 4, 1, "", "Z"]], "pauli.paulialgebra": [[4, 2, 1, "", "PauliAlgebra"], [4, 1, 1, "", "add_pauli_algebra"], [4, 1, 1, "", "multiply_pauli_algebra"], [4, 1, 1, "", "multiply_pauli_algebra_by_scalar"], [4, 1, 1, "", "pauli_algebra_to_string"], [4, 1, 1, "", "simplify"]], "pauli.paulialgebra.PauliAlgebra": [[4, 3, 1, "", "__add__"], [4, 3, 1, "", "__mul__"], [4, 3, 1, "", "simplify"]]}, "objtypes": {"0": "py:module", "1": "py:function", "2": "py:class", "3": "py:method", "4": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "function", "Python function"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "titleterms": {"pauli": [1, 2, 3, 4], "welcom": 2, "": 2, "document": 2, "api": 2, "usag": 2, "instal": 2, "exampl": 2, "singl": 2, "qubit": 2, "group": [2, 4], "element": [2, 4], "properti": 2, "initi": 2, "string": 2, "represent": 2, "multipl": 2, "phase": 2, "algebra": 2, "variabl": 2, "addit": 2, "simplif": 2, "interpret": [2, 4], "command": 2, "line": 2, "tool": 2, "random": 2, "hermitian": 2, "matric": 2, "decomposit": 2, "modul": 4, "paulialgebra": 4, "decompos": 4, "gener": 4}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"pauli": [[1, "module-pauli"], [3, "pauli"]], "Welcome to pauli\u2019s documentation!": [[2, "welcome-to-pauli-s-documentation"]], "API": [[2, "api"]], "Usage": [[2, "usage"]], "Installation": [[2, "installation"]], "Examples": [[2, "examples"]], "Single-Qubit Pauli Group Elements": [[2, "single-qubit-pauli-group-elements"]], "Pauli Group Properties": [[2, "pauli-group-properties"]], "Element Initialization": [[2, "element-initialization"]], "Element String Representation": [[2, "element-string-representation"]], "Element Multiplication": [[2, "element-multiplication"]], "Phase Multiplication": [[2, "phase-multiplication"], [2, "id1"]], "Pauli Algebra": [[2, "pauli-algebra"]], "Variables and String Representation": [[2, "variables-and-string-representation"]], "Algebraic Multiplication": [[2, "algebraic-multiplication"]], "Algebraic Addition": [[2, "algebraic-addition"]], "Algebraic Simplification": [[2, "algebraic-simplification"]], "Pauli Interpreter and Command Line Tool": [[2, "pauli-interpreter-and-command-line-tool"]], "Random Hermitian Matrices": [[2, "random-hermitian-matrices"]], "Pauli Decompositions": [[2, "pauli-decompositions"]], "Modules": [[4, "modules"]], "Interpret": [[4, "module-pauli.interpreter"]], "PauliAlgebra": [[4, "module-pauli.paulialgebra"]], "Decompose": [[4, "module-pauli.decompose"]], "Generator": [[4, "module-pauli.generator"]], "Pauli Group Elements": [[4, "module-pauli.pauli"]]}, "indexentries": {"module": [[1, "module-pauli"], [4, "module-pauli.decompose"], [4, "module-pauli.generator"], [4, "module-pauli.interpreter"], [4, "module-pauli.pauli"], [4, "module-pauli.paulialgebra"]], "pauli": [[1, "module-pauli"]], "i (pauli.pauli.paulisymbol attribute)": [[4, "pauli.pauli.PauliSymbol.I"]], "paulialgebra (class in pauli.paulialgebra)": [[4, "pauli.paulialgebra.PauliAlgebra"]], "paulialgebraelement (class in pauli.pauli)": [[4, "pauli.pauli.PauliAlgebraElement"]], "paulielement (class in pauli.pauli)": [[4, "pauli.pauli.PauliElement"]], "paulisymbol (class in pauli.pauli)": [[4, "pauli.pauli.PauliSymbol"]], "x (pauli.pauli.paulisymbol attribute)": [[4, "pauli.pauli.PauliSymbol.X"]], "y (pauli.pauli.paulisymbol attribute)": [[4, "pauli.pauli.PauliSymbol.Y"]], "z (pauli.pauli.paulisymbol attribute)": [[4, "pauli.pauli.PauliSymbol.Z"]], "__add__() (pauli.paulialgebra.paulialgebra method)": [[4, "pauli.paulialgebra.PauliAlgebra.__add__"]], "__mul__() (pauli.paulialgebra.paulialgebra method)": [[4, "pauli.paulialgebra.PauliAlgebra.__mul__"]], "add_pauli_algebra() (in module pauli.paulialgebra)": [[4, "pauli.paulialgebra.add_pauli_algebra"]], "decomptopauli() (in module pauli.decompose)": [[4, "pauli.decompose.decompToPauli"]], "eq_group() (pauli.pauli.paulialgebraelement method)": [[4, "pauli.pauli.PauliAlgebraElement.eq_group"]], "generatefrompaulidecomp() (in module pauli.generator)": [[4, "pauli.generator.generateFromPauliDecomp"]], "generatehermitian() (in module pauli.generator)": [[4, "pauli.generator.generateHermitian"]], "interpret() (in module pauli.interpreter)": [[4, "pauli.interpreter.interpret"]], "multiply_pauli() (in module pauli.pauli)": [[4, "pauli.pauli.multiply_pauli"]], "multiply_pauli_algebra() (in module pauli.paulialgebra)": [[4, "pauli.paulialgebra.multiply_pauli_algebra"]], "multiply_pauli_algebra_by_scalar() (in module pauli.paulialgebra)": [[4, "pauli.paulialgebra.multiply_pauli_algebra_by_scalar"]], "multiply_phase() (in module pauli.pauli)": [[4, "pauli.pauli.multiply_phase"]], "pauli.decompose": [[4, "module-pauli.decompose"]], "pauli.generator": [[4, "module-pauli.generator"]], "pauli.interpreter": [[4, "module-pauli.interpreter"]], "pauli.pauli": [[4, "module-pauli.pauli"]], "pauli.paulialgebra": [[4, "module-pauli.paulialgebra"]], "pauli_algebra_to_string() (in module pauli.paulialgebra)": [[4, "pauli.paulialgebra.pauli_algebra_to_string"]], "pauli_to_string() (in module pauli.pauli)": [[4, "pauli.pauli.pauli_to_string"]], "phase_to_string() (in module pauli.pauli)": [[4, "pauli.pauli.phase_to_string"]], "simplify() (in module pauli.paulialgebra)": [[4, "pauli.paulialgebra.simplify"]], "simplify() (pauli.paulialgebra.paulialgebra method)": [[4, "pauli.paulialgebra.PauliAlgebra.simplify"]], "simplify_val() (in module pauli.pauli)": [[4, "pauli.pauli.simplify_val"]]}})